// Generated by LiveScript 1.6.0
(function(){
  var newAccount, refreshWallet, toJS, refreshAccount, backgroundRefreshAccount, out$ = typeof exports != 'undefined' && exports || this;
  newAccount = require('./new-account.ls');
  refreshWallet = require('./refresh-wallet.ls');
  toJS = require('mobx').toJS;
  out$.refreshAccount = refreshAccount = curry$(function(web3, store, cb){
    return newAccount(store, store.current.seed, function(err, account){
      if (err != null) {
        return cb(err);
      }
      store.current.account = account;
      return refreshWallet(web3, store, cb);
    });
  });
  out$.backgroundRefreshAccount = backgroundRefreshAccount = function(web3, store, cb){
    var bgStore;
    store.current.refreshing = true;
    bgStore = toJS(store);
    return refreshAccount(web3, bgStore, function(err){
      store.current.refreshing = false;
      if (err != null) {
        return cb(err);
      }
      store.rates = bgStore.rates;
      store.current.account = bgStore.current.account;
      store.current.balanceUsd = bgStore.current.balanceUsd;
      return cb(null);
    });
  };
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
