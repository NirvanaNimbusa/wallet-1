// Generated by LiveScript 1.6.0
(function(){
  var waves, eth, insight, xem, toJS, ref$, pairsToObj, objToPairs, providers, action, calcFee, getKeys, getBalance, getTransactions, createTransaction, pushTx, out$ = typeof exports != 'undefined' && exports || this;
  waves = require('./providers/waves.ls');
  eth = require('./providers/eth.ls');
  insight = require('./providers/insight.ls');
  xem = require('./providers/xem.ls');
  toJS = require('mobx').toJS;
  ref$ = require('prelude-ls'), pairsToObj = ref$.pairsToObj, objToPairs = ref$.objToPairs;
  providers = {
    eth: eth,
    waves: waves,
    insight: insight,
    xem: xem
  };
  action = function(func){
    return function(config, cb){
      var provider, ref$;
      if ((config != null ? config.token : void 8) == null) {
        return cb("token is not defined");
      }
      provider = (ref$ = providers[config.token]) != null ? ref$ : insight;
      return func(provider, config, cb);
    };
  };
  out$.calcFee = calcFee = action(function(provider, config, cb){
    return provider.calcFee(config, cb);
  });
  out$.getKeys = getKeys = action(function(provider, config, cb){
    return provider.getKeys(config, cb);
  });
  out$.getBalance = getBalance = action(function(provider, config, cb){
    return provider.getBalance(config, cb);
  });
  out$.getTransactions = getTransactions = action(function(provider, config, cb){
    return provider.getTransactions(config, cb);
  });
  out$.createTransaction = createTransaction = action(function(provider, config, cb){
    return provider.createTransaction(config, cb);
  });
  out$.pushTx = pushTx = action(function(provider, config, cb){
    return provider.pushTx(config, cb);
  });
}).call(this);
