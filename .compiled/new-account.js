// Generated by LiveScript 1.6.0
(function(){
  var getCoins, ref$, objToPairs, pairsToObj, map, toJS, getKeys, slice$ = [].slice;
  getCoins = require('./plugin-loader.ls').getCoins;
  ref$ = require('prelude-ls'), objToPairs = ref$.objToPairs, pairsToObj = ref$.pairsToObj, map = ref$.map;
  toJS = require('mobx').toJS;
  getKeys = require('./api.ls').getKeys;
  module.exports = function(store, mnemonic, cb){
    var generateCoinWallet, generateCoinWallets, coins;
    mnemonic == null && (mnemonic = "");
    generateCoinWallet = function(coin, cb){
      var network, index;
      network = coin[store.current.network];
      index = 1;
      return getKeys({
        index: index,
        network: network,
        mnemonic: mnemonic,
        token: coin.token
      }, function(err, wallet){
        var balance, balanceUsd, usdRate;
        if (err != null) {
          return cb(err);
        }
        balance = '...';
        balanceUsd = '...';
        usdRate = '...';
        wallet.coin = coin;
        wallet.network = network;
        wallet.balance = balance;
        wallet.balanceUsd = balanceUsd;
        wallet.usdRate = usdRate;
        wallet.mnemonic = mnemonic;
        return cb(null, wallet);
      });
    };
    generateCoinWallets = function(arg$, cb){
      var coin, rest;
      coin = arg$[0], rest = slice$.call(arg$, 1);
      if (coin == null) {
        return cb(null, []);
      }
      return generateCoinWallet(coin, function(err, wallet){
        if (err != null) {
          return cb(err);
        }
        return generateCoinWallets(rest, function(err, wallets){
          var all;
          if (err != null) {
            return cb(err);
          }
          all = [wallet].concat(wallets);
          return cb(null, all);
        });
      });
    };
    coins = getCoins();
    return generateCoinWallets(coins, function(err, wallets){
      return cb(err, {
        mnemonic: mnemonic,
        wallets: wallets
      });
    });
  };
}).call(this);
