// Generated by LiveScript 1.6.0
(function(){
  var getBalance, ref$, times, plus, find, map, pairsToObj, getCoins, run, task, round5, calcWallet;
  getBalance = require('./api.ls').getBalance;
  ref$ = require('./math.ls'), times = ref$.times, plus = ref$.plus;
  ref$ = require('prelude-ls'), find = ref$.find, map = ref$.map, pairsToObj = ref$.pairsToObj;
  getCoins = require('./plugin-loader.ls').getCoins;
  ref$ = require('./workflow.ls'), run = ref$.run, task = ref$.task;
  round5 = require('./round5.ls');
  calcWallet = function(store, cb){
    var wallets, rates, state, coins, buildLoader, loaders, tasks;
    if (store == null) {
      return cb("Store is required");
    }
    wallets = store.current.account.wallets;
    rates = store.rates;
    state = {
      balanceUsd: 0
    };
    coins = getCoins();
    buildLoader = function(wallet){
      return task(function(cb){
        var token, usdRate, coin;
        token = wallet.coin.token;
        wallet.balance = '...';
        wallet.balanceUsd = 0;
        token = wallet.coin.token.toLowerCase();
        usdRate = rates[token];
        wallet.usdRate = round5(usdRate);
        coin = find(function(it){
          return it.token === wallet.coin.token;
        })(
        coins);
        if (coin == null) {
          return cb("Coin Not Found");
        }
        coin.wallet = wallet;
        return getBalance({
          address: wallet.address,
          network: wallet.network,
          token: token
        }, function(err, balance){
          if (err != null) {
            return cb(err);
          }
          wallet.balance = balance;
          wallet.balanceUsd = times(balance, usdRate);
          state.balanceUsd = plus(state.balanceUsd, wallet.balanceUsd);
          return cb();
        });
      });
    };
    loaders = map(buildLoader)(
    wallets);
    tasks = pairsToObj(
    map(function(it){
      return [loaders.indexOf(it).toString(), it];
    })(
    loaders));
    return run([tasks]).then(function(){
      if (typeof err != 'undefined' && err !== null) {
        return cb(err);
      }
      console.log(store.current.account);
      store.current.balanceUsd = round5(state.balanceUsd);
      return cb(null);
    });
  };
  module.exports = calcWallet;
}).call(this);
