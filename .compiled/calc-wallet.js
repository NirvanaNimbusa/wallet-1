// Generated by LiveScript 1.5.0
(function(){
  var getBalance, ref$, times, plus, networks, round5, calcWallet, slice$ = [].slice;
  getBalance = require('./api.ls').getBalance;
  ref$ = require('./math.ls'), times = ref$.times, plus = ref$.plus;
  networks = require('./networks.ls');
  round5 = function(value){
    var ref$, head, dec;
    if (value == null) {
      return '...';
    }
    ref$ = value.toString().split('.'), head = ref$[0], dec = ref$[1];
    if (dec == null) {
      return head;
    }
    return head + "." + dec.substr(0, 5);
  };
  calcWallet = function(store){
    var wallets, rates, state, addBalance, processWallets;
    if (store == null) {
      return null;
    }
    wallets = store.current.account.wallets;
    rates = store.rates;
    state = {
      balanceUsd: 0
    };
    addBalance = function(wallet, cb){
      return getBalance({
        address: wallet.address,
        network: wallet.network
      }, function(err, balance){
        var token, usdRate;
        if (err != null) {
          return wallet.balance = '...';
        }
        wallet.balance = balance;
        token = wallet.network.token.replace('Testnet', '').toUpperCase();
        usdRate = rates[token].USD;
        wallet.balanceUsd = times(balance, usdRate);
        state.balanceUsd = plus(state.balanceUsd, wallet.balanceUsd);
        store.current.balanceUsd = round5(state.balanceUsd);
        wallet.usdRate = round5(usdRate);
        networks[wallet.network.token].wallet = wallet;
        return cb();
      });
    };
    processWallets = function(arg$, cb){
      var head, tail;
      head = arg$[0], tail = slice$.call(arg$, 1);
      if (head == null) {
        return cb();
      }
      return addBalance(head, function(){
        return processWallets(tail, function(){
          return cb();
        });
      });
    };
    return processWallets(wallets, function(){
      return store.current.balanceUsd = round5(state.balanceUsd);
    });
  };
  module.exports = calcWallet;
}).call(this);
