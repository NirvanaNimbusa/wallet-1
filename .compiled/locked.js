// Generated by LiveScript 1.6.0
(function(){
  var react, map, ref$, set, check, exists, navigate, getPrimaryInfo, goto, wrongPin, checkPin, goBack, goForward, setVal, setupKeydown, setupVal, input, wrongTrials, setupButton, locked, focus;
  react = require('react');
  map = require('prelude-ls').map;
  ref$ = require('./pin.ls'), set = ref$.set, check = ref$.check, exists = ref$.exists;
  navigate = require('./navigate.ls');
  getPrimaryInfo = require('./get-primary-info.ls');
  goto = function(store, number, cb){
    var items, input;
    if (store.root == null) {
      return cb(null);
    }
    items = store.root.querySelectorAll('.locked input');
    input = items[number];
    if (input == null) {
      return cb(null);
    }
    return setTimeout(function(){
      input.focus();
      input.setSelectionRange(0, 1);
      return cb(null);
    }, 100);
  };
  wrongPin = function(store){
    store.current.pin = "";
    store.current.pinTrial += 1;
    return goto(store, 0, function(){});
  };
  checkPin = function(store){
    if (!exists()) {
      return;
    }
    if (!check(store.current.pin)) {
      return wrongPin(store);
    }
    store.current.pinTrial = 0;
    store.current.pin = "";
    return navigate(store, ':init');
  };
  goBack = function(store, number){
    var prev;
    prev = number - 1;
    if (prev < 0) {
      return;
    }
    return goto(store, prev, function(){});
  };
  goForward = function(store, number){
    var nxt, arr, ref$;
    nxt = number + 1;
    if (nxt > 3) {
      return;
    }
    arr = store.current.pin.split('');
    if (((ref$ = arr[number]) != null ? ref$ : "").length !== 1) {
      return;
    }
    return goto(store, nxt, function(){});
  };
  setVal = function(store, number, value){
    var arr, nextn;
    arr = store.current.pin.split('');
    arr[number] = value;
    store.current.pin = arr.join('');
    if (number === 3) {
      return checkPin(store);
    }
    nextn = number + 1;
    return goto(store, nextn, function(){});
  };
  setupKeydown = function(store){
    return function(number){
      return function(event){
        var keyCode;
        keyCode = event.keyCode;
        if (keyCode >= 48 && keyCode <= 57) {
          return setVal(store, number, keyCode - 48);
        }
        if (keyCode === 8 || keyCode === 37) {
          return goBack(store, number);
        }
        if (keyCode === 39) {
          return goForward(store, number);
        }
      };
    };
  };
  setupVal = function(store){
    return function(number){
      var ref$;
      return (ref$ = store.current.pin[number]) != null ? ref$ : "";
    };
  };
  input = function(store){
    return function(number){
      var keydown, val, type;
      keydown = setupKeydown(store);
      val = setupVal(store);
      type = (function(){
        switch (false) {
        case !!exists():
          return 'input';
        default:
          return 'password';
        }
      }());
      return react.createElement('input', {
        key: "pin-" + number,
        type: type + "",
        value: val(number) + "",
        placeholder: "0",
        onKeyDown: keydown(number),
        tabIndex: (number + 1) + "",
        pattern: "[0-9]",
        inputMode: "numeric",
        autoComplete: "off"
      });
    };
  };
  wrongTrials = function(store){
    if (store.current.pinTrial === 0) {
      return null;
    }
    return react.createElement('div', {
      key: "wrong-trial",
      className: 'wrong'
    }, ' Wrong PIN. Trials: ' + store.current.pinTrial);
  };
  setupButton = function(store){
    var setup, children;
    setup = function(){
      if (store.current.pin.match(/^[0-9]{4}$/) == null) {
        return alert('PIN should be 4 digits');
      }
      set(store.current.pin);
      return checkPin(store);
    };
    return react.createElement('div', {
      key: "setup-button"
    }, children = [
      react.createElement('button', {
        onClick: setup,
        className: 'setup'
      }, ' Setup'), react.createElement('div', {
        className: 'hint'
      }, ' Please memorize this PIN and do not provide it to third party.')
    ]);
  };
  locked = function(arg$){
    var store, title, footer, info, children;
    store = arg$.store;
    title = (function(){
      switch (false) {
      case !!exists():
        return "Setup PIN";
      default:
        return "Enter PIN";
      }
    }());
    footer = (function(){
      switch (false) {
      case !!exists():
        return setupButton;
      default:
        return wrongTrials;
      }
    }());
    info = getPrimaryInfo(store);
    return react.createElement('div', {
      key: "locked",
      className: 'locked locked-1169012682'
    }, children = [
      react.createElement('div', {
        className: 'logo'
      }, children = [
        react.createElement('img', {
          src: info.branding.logo + ""
        }), react.createElement('div', {
          className: 'title'
        }, ' ' + info.branding.title)
      ]), react.createElement('div', {
        key: "locked-title",
        className: 'title'
      }, ' ' + title), react.createElement('div', {
        key: "locked-inputs",
        className: 'inputs'
      }, children = map(input(store))(
      [0, 1, 2, 3])), footer(store)
    ]);
  };
  focus = function(store, cb){
    return goto(store, 0, function(){
      return cb(null);
    });
  };
  locked.focus = focus;
  module.exports = locked;
}).call(this);
